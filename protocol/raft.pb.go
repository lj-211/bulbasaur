// Code generated by protoc-gen-go. DO NOT EDIT.
// source: raft.proto

package protocol

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ErrCode int32

const (
	ErrCode_PartnerHasRegistered ErrCode = 0
	ErrCode_ConnectFail          ErrCode = 1
)

var ErrCode_name = map[int32]string{
	0: "PartnerHasRegistered",
	1: "ConnectFail",
}

var ErrCode_value = map[string]int32{
	"PartnerHasRegistered": 0,
	"ConnectFail":          1,
}

func (x ErrCode) String() string {
	return proto.EnumName(ErrCode_name, int32(x))
}

func (ErrCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{0}
}

// entity
type Role int32

const (
	Role_Candidate Role = 0
	Role_Follower  Role = 1
	Role_Leader    Role = 2
)

var Role_name = map[int32]string{
	0: "Candidate",
	1: "Follower",
	2: "Leader",
}

var Role_value = map[string]int32{
	"Candidate": 0,
	"Follower":  1,
	"Leader":    2,
}

func (x Role) String() string {
	return proto.EnumName(Role_name, int32(x))
}

func (Role) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{1}
}

// common msg
type Message struct {
	Mtype                uint32   `protobuf:"varint,1,opt,name=mtype,proto3" json:"mtype,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetMtype() uint32 {
	if m != nil {
		return m.Mtype
	}
	return 0
}

func (m *Message) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type NodeInfo struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeInfo) Reset()         { *m = NodeInfo{} }
func (m *NodeInfo) String() string { return proto.CompactTextString(m) }
func (*NodeInfo) ProtoMessage()    {}
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{1}
}

func (m *NodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfo.Unmarshal(m, b)
}
func (m *NodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfo.Marshal(b, m, deterministic)
}
func (m *NodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfo.Merge(m, src)
}
func (m *NodeInfo) XXX_Size() int {
	return xxx_messageInfo_NodeInfo.Size(m)
}
func (m *NodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfo proto.InternalMessageInfo

func (m *NodeInfo) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *NodeInfo) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type Ping struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{2}
}

func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (m *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(m, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

func (m *Ping) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Pong struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{3}
}

func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (m *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(m, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func (m *Pong) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterEnum("protocol.ErrCode", ErrCode_name, ErrCode_value)
	proto.RegisterEnum("protocol.Role", Role_name, Role_value)
	proto.RegisterType((*Message)(nil), "protocol.Message")
	proto.RegisterType((*NodeInfo)(nil), "protocol.NodeInfo")
	proto.RegisterType((*Ping)(nil), "protocol.Ping")
	proto.RegisterType((*Pong)(nil), "protocol.Pong")
}

func init() { proto.RegisterFile("raft.proto", fileDescriptor_b042552c306ae59b) }

var fileDescriptor_b042552c306ae59b = []byte{
	// 277 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x4d, 0x6b, 0x2a, 0x41,
	0x10, 0x45, 0xed, 0xc1, 0xe7, 0x47, 0x3d, 0x4d, 0x26, 0x85, 0x04, 0x31, 0x1b, 0x71, 0x25, 0x2e,
	0xc6, 0xa0, 0x59, 0x64, 0x2f, 0x11, 0x03, 0x49, 0x90, 0x21, 0x90, 0x75, 0x69, 0x97, 0x43, 0x43,
	0xdb, 0x25, 0x3d, 0x1d, 0x64, 0xfe, 0x7d, 0xb0, 0x35, 0x10, 0x70, 0x55, 0xb7, 0x0e, 0xe7, 0x6e,
	0x2e, 0x80, 0xa7, 0x5d, 0xc8, 0x0e, 0x5e, 0x82, 0x60, 0x2b, 0x9e, 0xad, 0xd8, 0xc1, 0x43, 0x21,
	0x52, 0x58, 0x9e, 0x46, 0xb0, 0xf9, 0xde, 0x4d, 0x79, 0x7f, 0x08, 0xd5, 0x59, 0x1b, 0xcd, 0xa1,
	0xf9, 0xce, 0x65, 0x49, 0x05, 0x63, 0x0f, 0xfe, 0xed, 0x43, 0x75, 0xe0, 0xbe, 0x1a, 0xaa, 0x71,
	0x37, 0x3f, 0x3f, 0x88, 0x50, 0xd7, 0x14, 0xa8, 0x9f, 0x0c, 0xd5, 0xb8, 0x93, 0xc7, 0x3c, 0xca,
	0xa0, 0xf5, 0x21, 0x9a, 0x5f, 0xdd, 0x4e, 0xf0, 0x06, 0x12, 0xa3, 0x2f, 0x95, 0xc4, 0xe8, 0x93,
	0x4f, 0x5a, 0xfb, 0xe8, 0xb7, 0xf3, 0x98, 0x47, 0xf7, 0x50, 0x5f, 0x1b, 0x57, 0xfc, 0x71, 0xdb,
	0x27, 0x37, 0x72, 0xb9, 0xe6, 0x93, 0x27, 0x68, 0xbe, 0x78, 0xbf, 0x10, 0xcd, 0xd8, 0x87, 0xde,
	0x9a, 0x7c, 0x70, 0xec, 0x57, 0x54, 0xe6, 0x5c, 0x98, 0x32, 0xb0, 0x67, 0x9d, 0xd6, 0xf0, 0x16,
	0xfe, 0x2f, 0xc4, 0x39, 0xde, 0x86, 0x25, 0x19, 0x9b, 0xaa, 0xc9, 0x14, 0xea, 0xb9, 0x58, 0xc6,
	0x2e, 0xb4, 0x17, 0xe4, 0xb4, 0xd1, 0x14, 0x38, 0xad, 0x61, 0x07, 0x5a, 0x4b, 0xb1, 0x56, 0x8e,
	0xec, 0x53, 0x85, 0x00, 0x8d, 0x37, 0x26, 0xcd, 0x3e, 0x4d, 0x66, 0xcf, 0x90, 0xac, 0x08, 0x67,
	0xd0, 0xf8, 0x3c, 0xca, 0x17, 0x55, 0x78, 0x97, 0xfd, 0x6e, 0x96, 0x5d, 0x36, 0x19, 0x5c, 0xa3,
	0xb1, 0x7a, 0x54, 0x9b, 0x46, 0xa4, 0xf3, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc8, 0x99, 0x14,
	0x8c, 0x71, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HaClient is the client API for Ha service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HaClient interface {
	// 通用双向消息
	TwoWay(ctx context.Context, opts ...grpc.CallOption) (Ha_TwoWayClient, error)
}

type haClient struct {
	cc *grpc.ClientConn
}

func NewHaClient(cc *grpc.ClientConn) HaClient {
	return &haClient{cc}
}

func (c *haClient) TwoWay(ctx context.Context, opts ...grpc.CallOption) (Ha_TwoWayClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Ha_serviceDesc.Streams[0], "/protocol.Ha/TwoWay", opts...)
	if err != nil {
		return nil, err
	}
	x := &haTwoWayClient{stream}
	return x, nil
}

type Ha_TwoWayClient interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ClientStream
}

type haTwoWayClient struct {
	grpc.ClientStream
}

func (x *haTwoWayClient) Send(m *Message) error {
	return x.ClientStream.SendMsg(m)
}

func (x *haTwoWayClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// HaServer is the server API for Ha service.
type HaServer interface {
	// 通用双向消息
	TwoWay(Ha_TwoWayServer) error
}

// UnimplementedHaServer can be embedded to have forward compatible implementations.
type UnimplementedHaServer struct {
}

func (*UnimplementedHaServer) TwoWay(srv Ha_TwoWayServer) error {
	return status.Errorf(codes.Unimplemented, "method TwoWay not implemented")
}

func RegisterHaServer(s *grpc.Server, srv HaServer) {
	s.RegisterService(&_Ha_serviceDesc, srv)
}

func _Ha_TwoWay_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(HaServer).TwoWay(&haTwoWayServer{stream})
}

type Ha_TwoWayServer interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ServerStream
}

type haTwoWayServer struct {
	grpc.ServerStream
}

func (x *haTwoWayServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func (x *haTwoWayServer) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Ha_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.Ha",
	HandlerType: (*HaServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "TwoWay",
			Handler:       _Ha_TwoWay_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "raft.proto",
}
